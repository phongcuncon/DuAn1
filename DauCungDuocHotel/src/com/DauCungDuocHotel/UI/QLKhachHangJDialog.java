/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.DauCungDuocHotel.UI;
//đaaaaaa

import com.DauCungDuocHotel.DAO.KhachHangDAO;
import java.util.List;
import com.DauCungDuocHotel.Entity.KhachHang;
import com.DauCungDuocHotel.Untils.MsgBox;
import com.formdev.flatlaf.FlatLightLaf;
import java.awt.event.MouseEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ps22004_taquocphong
 */
public class QLKhachHangJDialog extends javax.swing.JDialog {

    int index=-1;
    
    /**
     * Creates new form QLKhachHangJDialog
     */
    public QLKhachHangJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setTitle("QL Khách hàng");
        init();
	chinhsua.setText("Chinh Sua");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupGioiTinhKH = new javax.swing.ButtonGroup();
        popUp = new javax.swing.JPopupMenu();
        chinhsua = new javax.swing.JMenuItem();
        xoa = new javax.swing.JMenuItem();
        datphong = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKhachHang = new javax.swing.JTable();
        txtTimKiem = new javax.swing.JTextField();
        cboDoTT = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        chinhsua.setText("jMenuItem1");
        chinhsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chinhsuaActionPerformed(evt);
            }
        });
        popUp.add(chinhsua);

        xoa.setText("Xóa");
        xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaActionPerformed(evt);
            }
        });
        popUp.add(xoa);

        datphong.setText("Đặt phòng");
        datphong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datphongActionPerformed(evt);
            }
        });
        popUp.add(datphong);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách khách hàng", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Helvetica Neue", 1, 18))); // NOI18N

        tblKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Họ tên khách hàng", "Tuổi", "Giới tính", "CCCD", "Trạng thái"
            }
        ));
        tblKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhachHangMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblKhachHangMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblKhachHang);

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jLabel10.setText("Độ thân thiết:");

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnMoi.setText("Làm mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        jButton1.setText("Lọc");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Them");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnTimKiem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboDoTT, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboDoTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(btnTimKiem)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMoi, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        timkiem();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void tblKhachHangMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhachHangMouseReleased
        if(evt.getButton()==MouseEvent.BUTTON3){
            if(evt.isPopupTrigger()&&tblKhachHang.getSelectedRowCount()!=0){
                popUp.show(evt.getComponent(),evt.getX(),evt.getY());
            }
        }
    }//GEN-LAST:event_tblKhachHangMouseReleased

    private void tblKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhachHangMouseClicked
        if(evt.getClickCount()==2){
            KhachHangJDialog f1= new KhachHangJDialog(null, rootPaneCheckingEnabled);
            index= tblKhachHang.getSelectedRow();
            KhachHang kh = list.get(index);
            f1.status1();
            f1.writeForm(kh);
            fillToTable();
            f1.setVisible(true);
        }
    }//GEN-LAST:event_tblKhachHangMouseClicked

    private void xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaActionPerformed
        index= tblKhachHang.getSelectedRow();
        KhachHang kh = list.get(index);
        String id= kh.getMaKH();
        if(MsgBox.confirm(this,"Bạn có muốn xóa khách hàng này không?")){
            try{
                dao.delete(id);
                list.removeAll(list);
                list.addAll(dao.selectAll());
                MsgBox.alert(this,"Xóa thành công!");
                fillToTable();
            }catch(Exception e){
                MsgBox.alert(this,"Xóa thất bại!");
            }
        }
    }//GEN-LAST:event_xoaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        list.removeAll(list);
        list.addAll(dao.selectAll());
        fillToTable();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void datphongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datphongActionPerformed
        DatPhongJDialog f2= new DatPhongJDialog(null, rootPaneCheckingEnabled);
        index= tblKhachHang.getSelectedRow();
        KhachHang kh = list.get(index);
        f2.writeForm(kh);
        f2.setStatus();
        f2.setVisible(true);
    }//GEN-LAST:event_datphongActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        DefaultTableModel model = (DefaultTableModel) tblKhachHang.getModel();
        model.setRowCount(0);
        String tk = txtTimKiem.getText();
        List<KhachHang> lst1 = dao.selectByKeyWord2(tk);
//        int cccd;
//        if(tk.isEmpty()){
//            cccd = 0;
//        }else
//            if(tk.chars().allMatch(Character::isDigit))
//                cccd=Integer.parseInt(tk);
        for (KhachHang kh : lst1) {
            model.addRow(new Object[]{kh.getTenKH(), kh.getTuoi(), kh.isGioiTinh()?"Nam" : "Nữ", kh.getCCCD(), kh.getGhiChu()});
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cbo();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       KhachHangJDialog f1= new KhachHangJDialog(null, rootPaneCheckingEnabled);
        
        f1.status();
      
        fillToTable();
        f1.setVisible(true);
	 list.removeAll(list);
        list.addAll(dao.selectAll());
        fillToTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void chinhsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chinhsuaActionPerformed
      KhachHangJDialog kh = new KhachHangJDialog(null, rootPaneCheckingEnabled);
      index = tblKhachHang.getSelectedRow();
      KhachHang khachhang = list.get(index);
      kh.writeForm(khachhang);
      kh.status1();
      kh.setVisible(true);
      fillToTable();
       list.removeAll(list);
        list.addAll(dao.selectAll());
        fillToTable();
    }//GEN-LAST:event_chinhsuaActionPerformed
    
    void ge(){
        KhachHang kh= new KhachHang();
        kh.getMaKH();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLKhachHangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLKhachHangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLKhachHangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLKhachHangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QLKhachHangJDialog dialog = new QLKhachHangJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGroupGioiTinhKH;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JComboBox<String> cboDoTT;
    private javax.swing.JMenuItem chinhsua;
    private javax.swing.JMenuItem datphong;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu popUp;
    private javax.swing.JTable tblKhachHang;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JMenuItem xoa;
    // End of variables declaration//GEN-END:variables

    KhachHangDAO dao = new KhachHangDAO();
    List<KhachHang> list = dao.selectAll();

    void init() {
        setLocationRelativeTo(null);
        tblKhachHang.setDefaultEditor(Object.class, null);
        this.fillToTable();
        this.fillCombo();
    }

    void fillToTable() {
        DefaultTableModel tblmodel = (DefaultTableModel) tblKhachHang.getModel();
        tblmodel.setRowCount(0);
        for (KhachHang kh : list) {
            tblmodel.addRow(new Object[]{
                kh.getTenKH(), kh.getTuoi(), kh.isGioiTinh()?"Nam" : "Nữ",kh.getCCCD(), kh.getGhiChu()
            });
        }
    }

    void timkiem() {
        DefaultTableModel model = (DefaultTableModel) tblKhachHang.getModel();
        model.setRowCount(0);
        String tk = txtTimKiem.getText();
        List<KhachHang> lst = dao.selectByKeyWord(tk);
        for (KhachHang kh : lst) {
            model.addRow(new Object[]{
                kh.getTenKH(), kh.getTuoi(), kh.isGioiTinh()?"Nam" : "Nữ", kh.getCCCD(), kh.getGhiChu()
            });
        }
    }
    
    void cbo() {
        String ad = (String) cboDoTT.getSelectedItem();
        DefaultTableModel model1 = (DefaultTableModel) tblKhachHang.getModel();
        model1.setRowCount(0);
        List<KhachHang> list1 = dao.selectByKeyWord1(ad);
        for (KhachHang kh2 : list1) {
            model1.addRow(new Object[]{
                kh2.getTenKH(), kh2.getTuoi(), kh2.isGioiTinh()?"Nam" : "Nữ", kh2.getCCCD(), kh2.getGhiChu()
            });
        }
    }

    void fillCombo() {

        DefaultComboBoxModel tblmodel = (DefaultComboBoxModel) cboDoTT.getModel();
        tblmodel.removeAllElements();

        for (KhachHang kh : list) {

            if (check(kh.getDoThanThiet(), cboDoTT) == false) {
                tblmodel.addElement(kh.getDoThanThiet());

            }

        }

    }

    boolean check(Object ob, JComboBox cbo) {
        for (int i = 0; i < list.size(); i++) {
            if (ob.equals(cbo.getItemAt(i))) {
                return true;
            }
        }
        return false;
    }
}
